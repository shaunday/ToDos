<UserControl x:Class="Todos.Ui.Sections.TasksView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:models="clr-namespace:Todos.Ui.Models"
             xmlns:DotNetCommon="clr-namespace:ToDos.DotNet.Common;assembly=Todos.DotNet.Common"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:Todos.Ui.Resources.Converters"
             mc:Ignorable="d"
             d:DesignHeight="600" d:DesignWidth="900">

    <UserControl.Resources>
        <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
            <ResourceDictionary Source="ActionsDataTemplate.xaml" />
            <ResourceDictionary Source="StatusDataTemplate.xaml" />
        </ResourceDictionary.MergedDictionaries>

            <!-- Enum values for Priority -->
            <ObjectDataProvider x:Key="TaskPriorityValues"
                                MethodName="GetValues"
                                ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="DotNetCommon:TaskPriority"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>



        <!-- Row Style -->
        <Style x:Key="TaskRowStyle" TargetType="DataGridRow">
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Opacity" Value="1" />
            <Setter Property="Margin" Value="1" />
       
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                </Trigger>
                
                <!-- Highlight row if this row is being edited -->
                <DataTrigger Binding="{Binding IsEditing}" Value="True">
                    <Setter Property="BorderThickness" Value="3" />
                    <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignPrimary}" />
                    <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}" />
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="{DynamicResource MaterialDesignPrimary}" Direction="270" ShadowDepth="4" BlurRadius="8" Opacity="0.4" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="2" />
                    <Setter Property="ToolTip" Value="Currently being edited" />
                </DataTrigger>

                <!-- Dim non-editing rows when any row is being edited -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <!-- Some row is being edited -->
                        <Condition Binding="{Binding DataContext.EditingTask, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={StaticResource SingleNotEqualConverter}, ConverterParameter={x:Null}}" Value="True" />
                        <!-- This row is not the editing row -->
                        <Condition Binding="{Binding IsEditing}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Opacity" Value="0.6" />
                    <Setter Property="Background" Value="#FFF5F5F5" />
                    <Setter Property="ToolTip" Value="Another task is being edited" />
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="Gray" Direction="270" ShadowDepth="1" BlurRadius="3" Opacity="0.3" />
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger>

                <!-- Lock row if IsLocked true -->
                <DataTrigger Binding="{Binding IsLocked}" Value="True">
                    <Setter Property="Background" Value="#FFFFF0F0" />
                    <Setter Property="Opacity" Value="0.6" />
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="Red" Direction="270" ShadowDepth="2" BlurRadius="4" Opacity="0.2" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ToolTip" Value="Locked due to external reason" />
                </DataTrigger>
                </Style.Triggers>
        </Style>

        <!-- Cell Style -->
        <Style x:Key="TaskCellStyle" TargetType="DataGridCell">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="IsHitTestVisible" Value="False"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                    </Trigger>

                <!-- Enable hit testing for editing cells -->
                <DataTrigger Binding="{Binding IsEditing}" Value="True">
                    <Setter Property="Background" Value="#FFF0F8FF" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignPrimary}" />
                    <Setter Property="IsHitTestVisible" Value="True" />
                </DataTrigger>

                <!-- Enhanced styling for locked cells -->
                <DataTrigger Binding="{Binding IsLocked}" Value="True">
                    <Setter Property="Background" Value="#FFFFF0F0" />
                    <Setter Property="Foreground" Value="Gray" />
                    <Setter Property="IsHitTestVisible" Value="False" />
                </DataTrigger>

                <!-- Disable hit testing when another row is being edited and this row is not the editing row -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <!-- Some row is being edited -->
                        <Condition Binding="{Binding DataContext.EditingTask, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={StaticResource SingleNotEqualConverter}, ConverterParameter={x:Null}}" Value="True" />
                        <!-- This row is not the editing row -->
                        <Condition Binding="{Binding IsEditing}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="IsHitTestVisible" Value="False" />
                    <Setter Property="Background" Value="#FFF5F5F5" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Generic Task Text Element Style -->
        <Style x:Key="TaskTextElementStyle" TargetType="TextBlock" BasedOn="{StaticResource CenteredTextBlockStyle}">
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Text}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsEditing}" Value="True">
                    <Setter Property="FontWeight" Value="Bold" />
                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignPrimary}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsLocked}" Value="True">
                    <Setter Property="Foreground" Value="Gray" />
                    <Setter Property="FontStyle" Value="Italic" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsCompleted}" Value="True">
                    <Setter Property="TextDecorations" Value="Strikethrough" />
                    <Setter Property="Foreground" Value="Gray" />
                </DataTrigger>
            </Style.Triggers>
        </Style>



        <!-- Actions Column Cell Style - Always hit test visible -->
        <Style x:Key="ActionsCellStyle" TargetType="DataGridCell" BasedOn="{StaticResource TaskCellStyle}">
            <Setter Property="IsHitTestVisible" Value="True"/>
        </Style>



        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Margin="16">
        <!-- Add Task Form -->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Add Task Form Panel -->
        <materialDesign:Card Grid.Row="0" 
                             Margin="0,0,0,16" 
                             Padding="16"
                             Visibility="{Binding IsAddingNewTask, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Form Title -->
                <TextBlock Grid.Row="0" Grid.Column="0"
                           Text="Add New Task"
                           Style="{DynamicResource MaterialDesignHeadline6TextBlock}"
                           Margin="0,0,0,16"/>

                <!-- Form Fields -->
                <Grid Grid.Row="1" Grid.Column="0" Margin="0,0,16,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!-- Title Field -->
                    <TextBox Grid.Row="0" Grid.Column="0"
                             Text="{Binding NewTask.Title, UpdateSourceTrigger=PropertyChanged}"
                             materialDesign:HintAssist.Hint="Task Title *"
                             Margin="0,0,8,8"
                             Style="{DynamicResource MaterialDesignOutlinedTextBox}"/>

                    <!-- Description Field -->
                    <TextBox Grid.Row="0" Grid.Column="1"
                             Text="{Binding NewTask.Description, UpdateSourceTrigger=PropertyChanged}"
                             materialDesign:HintAssist.Hint="Description"
                             Margin="8,0,0,8"
                             Style="{DynamicResource MaterialDesignOutlinedTextBox}"/>

                    <!-- Priority Field -->
                    <ComboBox Grid.Row="1" Grid.Column="0"
                              SelectedItem="{Binding NewTask.Priority}"
                              ItemsSource="{Binding Source={StaticResource TaskPriorityValues}}"
                              materialDesign:HintAssist.Hint="Priority"
                              Margin="0,0,8,8"
                              Style="{DynamicResource MaterialDesignOutlinedComboBox}"/>

                    <!-- Due Date Field -->
                    <DatePicker Grid.Row="1" Grid.Column="1"
                                SelectedDate="{Binding NewTask.DueDate}"
                                materialDesign:HintAssist.Hint="Due Date"
                                Margin="8,0,0,8"
                                Style="{DynamicResource MaterialDesignOutlinedDatePicker}"/>
                </Grid>

                <!-- Error Message -->
                <TextBlock Grid.Row="2" Grid.Column="0"
                           Text="{Binding ErrorMessage}"
                           Foreground="Red"
                           Visibility="{Binding ErrorMessage, Converter={StaticResource StringToVisibilityConverter}}"
                           Margin="0,8,0,0"/>

                <!-- Action Buttons -->
                <StackPanel Grid.Row="1" Grid.Column="1" 
                            Grid.RowSpan="2"
                            Orientation="Horizontal" 
                            VerticalAlignment="Bottom"
                            Margin="16,0,0,0">

                    <Button Command="{Binding AddTaskCommand}"
                            Style="{DynamicResource MaterialDesignRaisedButton}"
                            Margin="0,0,8,0"
                            IsEnabled="{Binding IsLoading, Converter={StaticResource InverseBooleanConverter}}">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Plus" Margin="0,0,8,0"/>
                            <TextBlock Text="Add Task"/>
                        </StackPanel>
                    </Button>

                    <Button Command="{Binding CancelAddTaskCommand}"
                            Style="{DynamicResource MaterialDesignOutlinedButton}"
                            IsEnabled="{Binding IsLoading, Converter={StaticResource InverseBooleanConverter}}">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Close" Margin="0,0,8,0"/>
                            <TextBlock Text="Cancel"/>
                        </StackPanel>
                    </Button>
                </StackPanel>

                <!-- Loading Overlay -->
                <Grid Grid.Row="0" Grid.Column="0" Grid.RowSpan="3"
                      Background="#80000000"
                      Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <ProgressBar Style="{DynamicResource MaterialDesignCircularProgressBar}"
                                 Value="0"
                                 IsIndeterminate="True"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"/>
                </Grid>
            </Grid>
        </materialDesign:Card>

        <!-- Main Content -->
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Toolbar -->
            <materialDesign:Card Grid.Row="0" 
                                 Margin="0,0,0,8" 
                                 Padding="8">
                <StackPanel Orientation="Horizontal">
                    <Button Command="{Binding ShowAddTaskFormCommand}"
                            Style="{DynamicResource MaterialDesignRaisedButton}"
                            Margin="0,0,8,0"
                            Visibility="{Binding IsAddingNewTask, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Plus" Margin="0,0,8,0"/>
                            <TextBlock Text="Add Task"/>
                        </StackPanel>
                    </Button>

                    <!-- Error Message Display -->
                    <TextBlock Text="{Binding ErrorMessage}"
                               Foreground="Red"
                               VerticalAlignment="Center"
                               Margin="16,0,0,0"
                               Visibility="{Binding ErrorMessage, Converter={StaticResource StringToVisibilityConverter}}"/>
                </StackPanel>
            </materialDesign:Card>

            <!-- DataGrid -->
            <DataGrid Grid.Row="1"
                      ItemsSource="{Binding Tasks}"
                      AutoGenerateColumns="False"
                      CanUserAddRows="False"
                      CanUserDeleteRows="True"
                      IsReadOnly="False"
                      Padding="10"
                      HorizontalScrollBarVisibility="Disabled"
                      RowStyle="{StaticResource TaskRowStyle}"
                      CellStyle="{StaticResource TaskCellStyle}"
                      materialDesign:DataGridAssist.CellPadding="8"
                      materialDesign:DataGridAssist.ColumnHeaderPadding="12,4"
                      ColumnHeaderStyle="{StaticResource CenteredColumnHeaderStyle}">

                <DataGrid.Columns>
                    <!-- Title Column -->
                    <DataGridTextColumn Header="Title" Width="*"
                                    Binding="{Binding Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    ElementStyle="{StaticResource TaskTextElementStyle}"
                                    EditingElementStyle="{DynamicResource MaterialDesignOutlinedTextBox}" />

                    <!-- Description Column -->
                    <DataGridTextColumn Header="Description" Width="3*"
                                    Binding="{Binding Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    ElementStyle="{StaticResource TaskTextElementStyle}"
                                    EditingElementStyle="{DynamicResource MaterialDesignOutlinedTextBox}" />

                    <!-- Priority Column -->
                    <DataGridComboBoxColumn Header="Priority"
                                       SelectedItemBinding="{Binding Priority, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                       ItemsSource="{Binding Source={StaticResource TaskPriorityValues}}"
                                       Width="0.75*">
                        <DataGridComboBoxColumn.ElementStyle>
                            <Style TargetType="ComboBox" BasedOn="{StaticResource CenteredComboBoxStyle}" />
                        </DataGridComboBoxColumn.ElementStyle>
                        <DataGridComboBoxColumn.EditingElementStyle>
                            <Style TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignOutlinedComboBox}" />
                        </DataGridComboBoxColumn.EditingElementStyle>
                    </DataGridComboBoxColumn>

                    <!-- Completed Column -->
                    <DataGridCheckBoxColumn Header="Completed" 
                                       Binding="{Binding IsCompleted, Mode=TwoWay}" 
                                       Width="*" />

                    <!-- Due Date Column -->
                    <DataGridTemplateColumn Header="Due Date" Width="0.75*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <DatePicker SelectedDate="{Binding DueDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Center" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <DatePicker SelectedDate="{Binding DueDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Center"
                                        Style="{DynamicResource MaterialDesignOutlinedDatePicker}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>

                    <!-- Tags Column -->
                    <DataGridTemplateColumn Header="Tags" Width="1.5*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ItemsControl ItemsSource="{Binding Tags}" 
                                          VerticalAlignment="Center" 
                                          HorizontalAlignment="Center">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Border Margin="2" Padding="4,2" Background="{DynamicResource MaterialDesignChipBackgroundBrush}" CornerRadius="12">
                                                <TextBlock Text="{Binding Name}" FontSize="11" />
                                            </Border>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!-- Status Column -->
                    <DataGridTemplateColumn Header="Status" Width="Auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <StaticResource ResourceKey="StatusDataTemplate" />
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!-- Actions Column -->
                    <DataGridTemplateColumn Header="Actions" Width="*">
                        <DataGridTemplateColumn.CellStyle>
                            <Style TargetType="DataGridCell" BasedOn="{StaticResource ActionsCellStyle}" />
                        </DataGridTemplateColumn.CellStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <StaticResource ResourceKey="ActionsDataTemplate" />
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </Grid>
</UserControl>
