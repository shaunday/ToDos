<UserControl x:Class="ToDos.Ui.Sections.TasksView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:models="clr-namespace:ToDos.Ui.Models"
             xmlns:DotNetCommon="clr-namespace:ToDos.DotNet.Common;assembly=Todos.DotNet.Common"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:ToDos.Ui.Resources.Converters"
             mc:Ignorable="d"
             d:DesignHeight="600" d:DesignWidth="900">

    <UserControl.Resources>
        <!-- Enum values for Priority -->
        <ObjectDataProvider x:Key="TaskPriorityValues"
                            MethodName="GetValues"
                            ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="DotNetCommon:GlobalTypes+TaskPriority"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <!-- Centered TextBlock Style -->
        <Style x:Key="CenteredTextBlockStyle" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>

        <!-- Centered TextBox Style -->
        <Style x:Key="CenteredTextBoxStyle" TargetType="TextBox">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>

        <!-- Centered ComboBox Style -->
        <Style x:Key="CenteredComboBoxStyle" TargetType="ComboBox">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>

        <!-- Centered ContentControl Style -->
        <Style x:Key="CenteredContentControlStyle" TargetType="ContentControl">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>

        <!-- Centered Column Header Style -->
        <Style x:Key="CenteredColumnHeaderStyle" TargetType="DataGridColumnHeader" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>

        <!-- Actions: View Mode Template -->
        <DataTemplate x:Key="ActionsViewTemplate">
            <StackPanel Orientation="Horizontal">
                <Button Style="{StaticResource MaterialDesignIconButton}"
                        Command="{Binding DataContext.EditTaskCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                        CommandParameter="{Binding DataContext, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                        Foreground="{DynamicResource MaterialDesignPrimary}">
                    <materialDesign:PackIcon Kind="Pencil" />
                    <Button.ToolTip>Edit</Button.ToolTip>
                </Button>
                <Button Style="{StaticResource MaterialDesignIconButton}"
                        Command="{Binding DataContext.DeleteTaskCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                        CommandParameter="{Binding DataContext, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                        Foreground="Red">
                    <materialDesign:PackIcon Kind="Delete" />
                    <Button.ToolTip>Delete</Button.ToolTip>
                </Button>
            </StackPanel>
        </DataTemplate>

        <!-- Actions: Edit Mode Template -->
        <DataTemplate x:Key="ActionsEditTemplate">
            <StackPanel Orientation="Horizontal">
                <Button Style="{StaticResource MaterialDesignIconButton}"
                        Command="{Binding DataContext.SaveTaskCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                        CommandParameter="{Binding DataContext, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                        Foreground="Green">
                    <materialDesign:PackIcon Kind="ContentSave" />
                    <Button.ToolTip>Save</Button.ToolTip>
                </Button>
                <Button Style="{StaticResource MaterialDesignIconButton}"
                        Command="{Binding DataContext.CancelEditCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                        CommandParameter="{Binding DataContext, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                        Foreground="Orange">
                    <materialDesign:PackIcon Kind="Cancel" />
                    <Button.ToolTip>Cancel</Button.ToolTip>
                </Button>
            </StackPanel>
        </DataTemplate>

        <!-- Row Style -->
        <Style x:Key="TaskRowStyle" TargetType="DataGridRow">
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Opacity" Value="1" />
            <Setter Property="Margin" Value="1" />
       
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
                
                <!-- Highlight row if this row is being edited -->
                <DataTrigger Binding="{Binding IsEditing}" Value="True">
                    <Setter Property="BorderThickness" Value="3" />
                    <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignPrimary}" />
                    <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}" />
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="{DynamicResource MaterialDesignPrimary}" Direction="270" ShadowDepth="4" BlurRadius="8" Opacity="0.4" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="2" />
                    <Setter Property="ToolTip" Value="Currently being edited" />
                </DataTrigger>

                <!-- Lock row if IsLocked true -->
                <DataTrigger Binding="{Binding IsLocked}" Value="True">
                    <Setter Property="Background" Value="#FFFFF0F0" />
                    <Setter Property="Opacity" Value="0.8" />
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="Red" Direction="270" ShadowDepth="2" BlurRadius="4" Opacity="0.2" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ToolTip" Value="Locked due to external reason" />
                </DataTrigger>

                <!-- Dim non-editing rows when any row is being edited -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <!-- Some row is being edited -->
                        <Condition Binding="{Binding DataContext.EditingTask, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={StaticResource SingleNotEqualConverter}, ConverterParameter={x:Null}}" Value="True" />
                        <!-- This row is not the editing row -->
                        <Condition Binding="{Binding IsEditing}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Opacity" Value="0.6" />
                    <Setter Property="Background" Value="#FFF5F5F5" />
                    <Setter Property="ToolTip" Value="Another task is being edited" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Cell Style -->
        <Style x:Key="TaskCellStyle" TargetType="DataGridCell">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>

                <!-- Enhanced styling for editing cells -->
                <DataTrigger Binding="{Binding IsEditing}" Value="True">
                    <Setter Property="Background" Value="#FFF0F8FF" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignPrimary}" />
                </DataTrigger>

                <!-- Enhanced styling for locked cells -->
                <DataTrigger Binding="{Binding IsLocked}" Value="True">
                    <Setter Property="Background" Value="#FFFFF0F0" />
                    <Setter Property="Foreground" Value="Gray" />
                    <Setter Property="IsHitTestVisible" Value="False" />
                </DataTrigger>

                <!-- Disable hit testing when another row is being edited and this row is not the editing row -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <!-- Some row is being edited -->
                        <Condition Binding="{Binding DataContext.EditingTask, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={StaticResource SingleNotEqualConverter}, ConverterParameter={x:Null}}" Value="True" />
                        <!-- This row is not the editing row -->
                        <Condition Binding="{Binding IsEditing}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="IsHitTestVisible" Value="False" />
                    <Setter Property="Background" Value="#FFF5F5F5" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid Margin="16">
        <DataGrid ItemsSource="{Binding Tasks}"
                  AutoGenerateColumns="False"
                  CanUserAddRows="False"
                  CanUserDeleteRows="True"
                  IsReadOnly="False"
                  Padding="10"
                  HorizontalScrollBarVisibility="Disabled"
                  RowStyle="{StaticResource TaskRowStyle}"
                  CellStyle="{StaticResource TaskCellStyle}"
                  materialDesign:DataGridAssist.CellPadding="8"
                  materialDesign:DataGridAssist.ColumnHeaderPadding="12,4"
                  Margin="0,0,0,48"
                  ColumnHeaderStyle="{StaticResource CenteredColumnHeaderStyle}">

            <DataGrid.Columns>
                <!-- Title Column -->
                <DataGridTextColumn Header="Title" Width="*">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource CenteredTextBlockStyle}">
                            <Setter Property="Text" Value="{Binding Title}" />
                            <Setter Property="FontWeight" Value="Normal" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsEditing}" Value="True">
                                    <Setter Property="FontWeight" Value="Bold" />
                                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignPrimary}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsLocked}" Value="True">
                                    <Setter Property="Foreground" Value="Gray" />
                                    <Setter Property="FontStyle" Value="Italic" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsCompleted}" Value="True">
                                    <Setter Property="TextDecorations" Value="Strikethrough" />
                                    <Setter Property="Foreground" Value="Gray" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                    <DataGridTextColumn.EditingElementStyle>
                        <Style TargetType="TextBox" BasedOn="{StaticResource CenteredTextBoxStyle}">
                            <Setter Property="Text" Value="{Binding Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignPrimary}" />
                        </Style>
                    </DataGridTextColumn.EditingElementStyle>
                </DataGridTextColumn>

                <!-- Description Column -->
                <DataGridTextColumn Header="Description" Width="3*">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource CenteredTextBlockStyle}">
                            <Setter Property="Text" Value="{Binding Description}" />
                            <Setter Property="TextWrapping" Value="Wrap" />
                            <Setter Property="FontWeight" Value="Normal" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsEditing}" Value="True">
                                    <Setter Property="FontWeight" Value="Bold" />
                                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignPrimary}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsLocked}" Value="True">
                                    <Setter Property="Foreground" Value="Gray" />
                                    <Setter Property="FontStyle" Value="Italic" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsCompleted}" Value="True">
                                    <Setter Property="TextDecorations" Value="Strikethrough" />
                                    <Setter Property="Foreground" Value="Gray" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                    <DataGridTextColumn.EditingElementStyle>
                        <Style TargetType="TextBox" BasedOn="{StaticResource CenteredTextBoxStyle}">
                            <Setter Property="Text" Value="{Binding Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Setter Property="TextWrapping" Value="Wrap" />
                            <Setter Property="AcceptsReturn" Value="True" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignPrimary}" />
                        </Style>
                    </DataGridTextColumn.EditingElementStyle>
                </DataGridTextColumn>

                <!-- Priority Column -->
                <DataGridComboBoxColumn Header="Priority"
                                       SelectedItemBinding="{Binding Priority, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                       ItemsSource="{Binding Source={StaticResource TaskPriorityValues}}"
                                       Width="0.75*">
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="ComboBox" BasedOn="{StaticResource CenteredComboBoxStyle}" />
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="ComboBox" BasedOn="{StaticResource CenteredComboBoxStyle}" />
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>

                <!-- Completed Column -->
                <DataGridCheckBoxColumn Header="Completed" 
                                       Binding="{Binding IsCompleted, Mode=TwoWay}" 
                                       Width="*" />

                <!-- Due Date Column -->
                <DataGridTemplateColumn Header="Due Date" Width="0.75*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <DatePicker SelectedDate="{Binding DueDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Center" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Tags Column -->
                <DataGridTemplateColumn Header="Tags" Width="1.5*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ItemsControl ItemsSource="{Binding Tags}" 
                                          VerticalAlignment="Center" 
                                          HorizontalAlignment="Center">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Border Margin="2" Padding="4,2" Background="{DynamicResource MaterialDesignChipBackgroundBrush}" CornerRadius="12">
                                            <TextBlock Text="{Binding Name}" FontSize="11" />
                                        </Border>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Status Column -->
                <DataGridTemplateColumn Header="Status" Width="Auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <!-- Editing indicator -->
                                <Border Background="Green" 
                                        CornerRadius="4" 
                                        Padding="3,1" 
                                        Margin="1"
                                        Height="24"
                                        VerticalAlignment="Center"
                                        Visibility="{Binding IsEditing, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <TextBlock Text="EDITING..." 
                                               FontSize="8" 
                                               FontWeight="Normal" 
                                               Foreground="White"
                                               VerticalAlignment="Center" />
                                </Border>
                                
                                <!-- Locked indicator -->
                                <Border Background="Red" 
                                        CornerRadius="4" 
                                        Padding="3,1" 
                                        Margin="1"
                                        Height="24"
                                        VerticalAlignment="Center"
                                        Visibility="{Binding IsLocked, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <TextBlock Text="LOCKED" 
                                               FontSize="8" 
                                               FontWeight="Normal" 
                                               Foreground="White"
                                               VerticalAlignment="Center" />
                                </Border>
                                
                                <!-- Completed indicator -->
                                <Border Background="Blue" 
                                        CornerRadius="4" 
                                        Padding="3,1" 
                                        Margin="1"
                                        Height="24"
                                        VerticalAlignment="Center"
                                        Visibility="{Binding IsCompleted, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <TextBlock Text="DONE" 
                                               FontSize="8" 
                                               FontWeight="Normal" 
                                               Foreground="White"
                                               VerticalAlignment="Center" />
                                </Border>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Actions Column -->
                <DataGridTemplateColumn Header="Actions" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ContentControl>
                                <ContentControl.Style>
                                    <Style TargetType="ContentControl" BasedOn="{StaticResource CenteredContentControlStyle}">
                                        <Setter Property="ContentTemplate" Value="{StaticResource ActionsViewTemplate}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsEditing}" Value="True">
                                                <Setter Property="ContentTemplate" Value="{StaticResource ActionsEditTemplate}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentControl.Style>
                            </ContentControl>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
